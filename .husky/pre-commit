set -e

echo "Running pre-commit hook..."

# Set up Python environment from the root .venv using a relative path
PROJECT_ROOT=$(dirname "$0")/..
source "${PROJECT_ROOT}/.venv/bin/activate"

# Run markdown formatter (runs unconditionally as it's fast and fixes issues)
echo "Running markdown formatter..."
pnpm run markdown-format

# Run pre-commit checks for validation_tool.ts if there are staged changes in its directory
if git diff --cached --quiet -- validation_tool.ts; then
  echo "No staged changes in validation_tool.ts, skipping pre-commit checks."
else
  echo "Running pre-commit checks for validation_tool.ts"
  (cd validation_tool.ts && pnpm run precommit-checks)
fi

# Run pre-commit checks for dagster_project (Python) if there are staged changes in its directory
if git diff --cached --quiet -- data_orchestrator.py/dagster_project; then
  echo "No staged changes in dagster_project, skipping pre-commit checks."
else
  echo "Running pre-commit checks for dagster_project"
  (cd data_orchestrator.py/dagster_project && \
    bash lint.sh && \
    bash test.sh)
fi

# Run pre-commit checks for dbt_project if there are staged changes in its directory
if git diff --cached --quiet -- data_orchestrator.py/dbt_project; then
  echo "No staged changes in dbt_project, skipping dbt build."
else
  echo "Running dbt build for data_orchestrator.py/dbt_project"
  (cd data_orchestrator.py/dbt_project && dbt build --vars '{is_ci_run: true}')
fi

git update-index --again