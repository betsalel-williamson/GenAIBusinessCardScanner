# This workflow runs CI for both Python and Node.js stacks in parallel.
name: Monorepo CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  python-ci:
    name: "Python CI"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    defaults:
      run:
        working-directory: ./dagster_card_processor
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: './dagster_card_processor.python-version'
          cache: "pip"
          cache-dependency-path: "requirements.txt"

      - name: Install Python dependencies
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: DBT | Seed sample data for CI
        run: |
          source .venv/bin/activate
          dbt seed --project-dir dbt_project --profiles-dir dbt_project --vars '{is_ci_run: true}'

      - name: DBT | Build from seeded data
        run: |
          source .venv/bin/activate
          dbt build --project-dir dbt_project --profiles-dir dbt_project --vars '{is_ci_run: true}'

      - name: Python | Lint with flake8
        run: |
          source .venv/bin/activate
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Python | Test with pytest
        run: |
          source .venv/bin/activate
          pytest --junitxml=pytest-report.xml

      - name: Report Python test results
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
          name: Python Test Results
          path: "./dagster_card_processor/pytest-report.xml"
          reporter: "python-pytest"
          fail-on-error: true

  node-ci:
    name: "Node.js CI"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    defaults:
      run:
        working-directory: ./validation_tool.ts
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          cache-dependency-path: ./validation_tool.ts/pnpm-lock.yaml

      - name: Node.js | Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Node.js | Run build, lint, and tests
        run: |
          pnpm build
          pnpm typecheck
          pnpm test

      - name: Report Node.js test results
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
          name: Node.js Test Results
          path: "./validation_tool.ts/junit.xml"
          reporter: "jest-junit"
          fail-on-error: true
